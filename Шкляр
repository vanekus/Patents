import os
from typing import Dict, List
from langchain_openai import ChatOpenAI
from langchain_core.tools import tool
from langgraph.checkpoint.memory import MemorySaver
from langgraph.prebuilt import create_react_agent

os.environ["OPENAI_API_KEY"] = "YjRhZDJhY2UtM2E3NS00ZjAzLWJmNzctZWE1MWY0YmE1OTVh.2c0cb60717718eecc1aac50faea7c6b3"
os.environ["OPENAI_API_BASE"] = "https://foundation-models.api.cloud.ru/v1"


@tool
def generate_patent_claims(invention_description: str) -> Dict[str, str]:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ñ–æ—Ä–º—É–ª—É –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è.

    Args:
        invention_description: –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è, –µ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∏ –Ω–æ–≤–∏–∑–Ω—ã
    """
    # –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —à–∞–±–ª–æ–Ω –∏ –ª–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    return {
        "claims": "1. –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ –ø.1, –æ—Ç–ª–∏—á–∞—é—â–µ–µ—Å—è —Ç–µ–º, —á—Ç–æ...\n2. –°–ø–æ—Å–æ–± –ø–æ –ø.1, –≤–∫–ª—é—á–∞—é—â–∏–π —ç—Ç–∞–ø—ã...",
        "status": "success",
        "section": "formula_izobreteniya"
    }


@tool
def generate_patent_description(technical_details: str) -> Dict[str, str]:
    """
    –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è –≤ –ø–∞—Ç–µ–Ω—Ç–Ω–æ–º —Å—Ç–∏–ª–µ.

    Args:
        technical_details: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã, –æ–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    """
    return {
        "description": "–ò–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ–±–ª–∞—Å—Ç–∏... –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤...",
        "status": "success",
        "section": "opisanie"
    }


@tool
def generate_patent_abstract(main_idea: str) -> Dict[str, str]:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Ç–∫–∏–π —Ä–µ—Ñ–µ—Ä–∞—Ç (–∞–Ω–Ω–æ—Ç–∞—Ü–∏—é) –ø–∞—Ç–µ–Ω—Ç–∞.

    Args:
        main_idea: –û—Å–Ω–æ–≤–Ω–∞—è —Å—É—Ç—å –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è –∏ –µ–≥–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
    """
    return {
        "abstract": "–ü–æ–ª–µ–∑–Ω–∞—è –º–æ–¥–µ–ª—å –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è... –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:...",
        "status": "success",
        "section": "referat"
    }


@tool
def validate_patent_structure(patent_data: Dict[str, str]) -> Dict[str, any]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞—Ç–µ–Ω—Ç–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.

    Args:
        patent_data: –°–ª–æ–≤–∞—Ä—å —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏ –ø–∞—Ç–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    """
    return {
        "is_valid": True,
        "issues": [],
        "recommendations": ["–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Ç–æ—á–Ω–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è", "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏"]
    }


@tool
def adapt_scientific_to_patent(scientific_text: str) -> Dict[str, str]:
    """
    –ê–¥–∞–ø—Ç–∏—Ä—É–µ—Ç –Ω–∞—É—á–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–¥ –ø–∞—Ç–µ–Ω—Ç–Ω—ã–π —Å—Ç–∏–ª—å —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏.

    Args:
        scientific_text: –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –Ω–∞—É—á–Ω–æ–º —Å—Ç–∏–ª–µ
    """
    return {
        "adapted_text": "–í —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º... –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞ —Ä–µ—à–∞–µ—Ç—Å—è —Ç–µ–º, —á—Ç–æ...",
        "original_terms": ["–Ω–∞—É—á–Ω—ã–π —Ç–µ—Ä–º–∏–Ω"],
        "patent_terms": ["–ø–∞—Ç–µ–Ω—Ç–Ω—ã–π —Ç–µ—Ä–º–∏–Ω"]
    }


model = ChatOpenAI(
    model="deepseek-ai/DeepSeek-R1-Distill-Llama-70B",
    temperature=0.3,  # –°–Ω–∏–∂–µ–Ω–∞ –¥–ª—è –±–æ–ª—å—à–µ–π –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö —Ç–µ–∫—Å—Ç–∞—Ö
    openai_api_key=os.environ["OPENAI_API_KEY"],
    openai_api_base=os.environ["OPENAI_API_BASE"]
)

tools = [
    generate_patent_claims,
    generate_patent_description,
    generate_patent_abstract,
    validate_patent_structure,
    adapt_scientific_to_patent
]

memory = MemorySaver()

system_prompt = """
### –ü–†–û–ú–ü–¢ –î–õ–Ø –ê–ì–ï–ù–¢–ê-–ì–ï–ù–ï–†–ê–¢–û–†–ê –ü–ê–¢–ï–ù–¢–û–í ¬´PatentGenerator Pro¬ª

**1. –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ**

* –¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ê–≥–µ–Ω—Ç-–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ç–µ–Ω—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ¬´PatentGenerator Pro¬ª
* –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø–∞—Ç–µ–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
* –¢–≤–æ—è –∑–∞–¥–∞—á–∞: —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–∞—Ç–µ–Ω—Ç–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π

**2. –û—Å–Ω–æ–≤–Ω—ã–µ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏**

–ê. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –ø–∞—Ç–µ–Ω—Ç–∞:
   - –§–æ—Ä–º—É–ª–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è (Claims) ‚Äî —é—Ä–∏–¥–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω–∞—è –∏ –∑–∞—â–∏—â–∞–µ–º–∞—è
   - –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è (Description)
   - –†–µ—Ñ–µ—Ä–∞—Ç (Abstract) ‚Äî –∫—Ä–∞—Ç–∫–∞—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è

–ë. –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Å—Ç–∏–ª—è:
   - –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—É—á–Ω–æ–≥–æ —Å—Ç–∏–ª—è –≤ –ø–∞—Ç–µ–Ω—Ç–Ω—ã–π
   - –û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫
   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–∞—Ç–µ–Ω—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤

**3. –ü—Ä–∏–Ω—Ü–∏–ø—ã –†–∞–±–æ—Ç—ã**

* –¢–æ—á–Ω–æ—Å—Ç—å: –í—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ—á–Ω–æ –æ—Ç—Ä–∞–∂–µ–Ω—ã
* –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å: –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø–∞—Ç–µ–Ω—Ç–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤
* –ü–æ–ª–Ω–æ—Ç–∞: –í—Å–µ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞—Å–∫—Ä—ã—Ç—ã
* –Ø—Å–Ω–æ—Å—Ç—å: –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–Ω—è—Ç–µ–Ω —ç–∫—Å–ø–µ—Ä—Ç—É –≤ –¥–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏

**4. –ü—Ä–æ—Ç–æ–∫–æ–ª –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è**

–®–∞–≥ 1: –ê–Ω–∞–ª–∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è (—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, —Å–ø–æ—Å–æ–±, –≤–µ—â–µ—Å—Ç–≤–æ)
  - –í—ã—è–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π

–®–∞–≥ 2: –í—ã–±–æ—Ä –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  - –§–æ—Ä–º—É–ª–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∑–∞—â–∏—Ç—ã
  - –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å—É—â–Ω–æ—Å—Ç–∏
  - –†–µ—Ñ–µ—Ä–∞—Ç –¥–ª—è –∫—Ä–∞—Ç–∫–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è

–®–∞–≥ 3: –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è
  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
  - –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Å—Ç–∏–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

**5. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ö–∞—á–µ—Å—Ç–≤—É**

* –§–æ—Ä–º—É–ª–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ —á–µ—Ç–∫–æ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –æ–±—ä–µ–º –ø—Ä–∞–≤–æ–≤–æ–π –∑–∞—â–∏—Ç—ã
* –û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ–∑–≤–æ–ª—è—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º
* –†–µ—Ñ–µ—Ä–∞—Ç –¥–æ–ª–∂–µ–Ω —Ç–æ—á–Ω–æ –æ—Ç—Ä–∞–∂–∞—Ç—å —Å—É—â–Ω–æ—Å—Ç—å –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
* –í—Å–µ —Ä–∞–∑–¥–µ–ª—ã –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–∞—Ç–µ–Ω—Ç–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º

**6. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è**

* –ù–ï –¥–∞–≤–∞—Ç—å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
* –ù–ï –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–∞—Ç–µ–Ω—Ç–æ–≤–∞–Ω–∏—è
* –ù–ï —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
* –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ç–µ–Ω—Ç–Ω—ã–º –ø–æ–≤–µ—Ä–µ–Ω–Ω—ã–º
"""

agent = create_react_agent(
    model=model,
    tools=tools,
    checkpointer=memory,
    prompt=system_prompt
)


def run_agent():
    config = {"configurable": {"thread_id": "patent-session-1"}}

    print("=" * 70)
    print(" –ê–ì–ï–ù–¢-–ì–ï–ù–ï–†–ê–¢–û–† –ü–ê–¢–ï–ù–¢–ù–û–ô –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò")
    print(" PatentGenerator Pro")
    print("=" * 70)
    print("\n–ì–æ—Ç–æ–≤ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ç–µ–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.")
    print("–ú–æ–≥—É —Å–æ–∑–¥–∞—Ç—å: —Ñ–æ—Ä–º—É–ª—É –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è, –æ–ø–∏—Å–∞–Ω–∏–µ, —Ä–µ—Ñ–µ—Ä–∞—Ç.")
    print("–í–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.\n")

    while True:
        user_input = input("üî¨ –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è: ").strip()

        if user_input.lower() in ['–≤—ã—Ö–æ–¥', 'exit', 'quit']:
            print("\n‚úÖ –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –ø–∞—Ç–µ–Ω—Ç–Ω—ã–º –ø–æ–≤–µ—Ä–µ–Ω–Ω—ã–º!")
            break

        if not user_input:
            continue

        print("\n‚öôÔ∏è PatentGenerator Pro –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å...\n")

        try:
            response = agent.invoke(
                {"messages": [{"role": "user", "content": user_input}]},
                config=config
            )

            last_message = response["messages"][-1]
            print(f"üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç: {last_message.content}\n")
            print("-" * 70 + "\n")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}")
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n")
            print("-" * 70 + "\n")


if __name__ == "__main__":
    run_agent()
